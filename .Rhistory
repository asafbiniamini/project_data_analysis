complex_reggrsion = lm(formula = imdb_rating ~ Ross_Geller +
Monica_Geller + Joey_Tribbiani +Rachel_Green + Phoebe_Buffay +
Chandler_Bing ,data = multiFull)
summary(complex_reggrsion)
View(multiFull)
?chisq.test
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
chisq.test(x= friends_info$us_views_millions,friends_info$imdb_rating)
cor.test(x= friends_info$us_views_millions,y = friends_info$imdb_rating, method = "pearson")
cor.test(x= friends_info$us_views_millions,y = friends_info$imdb_rating, method = "pearson")
liner_reg_us_views <-ggplot(friends_info, aes(x = friends_info$us_views_millions, y = friends_info$imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
ggplot(friends_info, aes(x = friends_info$us_views_millions, y = friends_info$imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
ggplot(friends_info, aes(x = friends_info$us_views_millions, y = friends_info$imdb_rating)) +
geom_point(size = 2, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "grey", se = FALSE)
ggplot(friends_info, aes(x = friends_info$us_views_millions, y = friends_info$imdb_rating)) +
geom_point(size = 2, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "grey", )
ggplot(friends_info, aes(x = friends_info$us_views_millions, y = friends_info$imdb_rating)) +
geom_point(size = 2, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "grey", se = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
dt_king_of <- friends %>% select(speaker,season,episode) %>%
group_by(speaker,season,episode) %>%
filter(grepl('Chandler Bing|Joey Tribbiani|Ross Geller|Rachel Green|Monica Geller|Phoebe Buffay', speaker)) %>%
group_by(speaker,season,episode) %>%
summarise(per_episode = n())
aa <- dt_king_of %>%
summarise(
season,
episode,
Chandler_Bing = ifelse(speaker == "Chandler Bing", per_episode, 0),
Joey_Tribbiani = ifelse(speaker == "Joey Tribbiani", per_episode, 0),
Rachel_Green = ifelse(speaker == "Rachel Green", per_episode, 0),
Monica_Geller = ifelse(speaker == "Monica Geller", per_episode, 0),
Phoebe_Buffay = ifelse(speaker == "Phoebe Buffay", per_episode, 0),
Ross_Geller = ifelse(speaker == "Ross Geller", per_episode, 0))
aa = subset(aa, select = -c(speaker))
Ross <- aa %>% select(season, episode, Ross_Geller) %>%
filter(Ross_Geller != 0)
Joey <- aa %>% select(season, episode, Joey_Tribbiani) %>%
filter(Joey_Tribbiani != 0)
Rachel <- aa %>% select(season, episode, Rachel_Green) %>%
filter(Rachel_Green != 0)
Monica <- aa %>% select(season, episode, Monica_Geller) %>%
filter(Monica_Geller != 0)
Phoebe <- aa %>% select(season, episode, Phoebe_Buffay) %>%
filter(Phoebe_Buffay != 0)
Chandler <- aa %>% select(season, episode, Chandler_Bing) %>%
filter(Chandler_Bing != 0)
grade <- friends_info %>% select(season, episode, imdb_rating, us_views_millions)
multiFull <- merge(merge(merge(merge(merge(merge(
Ross,
Monica, all = TRUE),
Joey, all = TRUE),
Rachel, all = TRUE),
Chandler, all = TRUE),
Phoebe, all = TRUE),
grade, all = TRUE) %>%
arrange(season, episode)
rank_speakers  <-  merge(dt_king_of,grade,by = c("season","episode"))
rank_speakers <- rank_speakers %>%
filter(!grepl('Sr.', speaker)) %>%
group_by(season, episode) %>%
arrange(season, episode)
agg_score <- rank_speakers %>% group_by(speaker) %>%
summarize(
score = sum(per_episode)
)
ggplot(data = agg_score, aes(speaker,score)) + geom_col(colour = "steelblue", fill="steelblue")
head(multiFull)
complex_reggrsion = lm(formula = imdb_rating ~ Ross_Geller +
Monica_Geller + Joey_Tribbiani +Rachel_Green + Phoebe_Buffay +
Chandler_Bing ,data = multiFull)
summary(complex_reggrsion)
filterd = multiFull %>% filter(dt$us_views_millions<50)
liner_reg1 <-ggplot(filterd, aes(x = Joey_Tribbiani, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg2 <-ggplot(filterd, aes(x = Monica_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg3 <-ggplot(filterd, aes(x = Ross_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg4 <-ggplot(filterd, aes(x = Chandler_Bing, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg5 <-ggplot(filterd, aes(x = Rachel_Green, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg6 <-ggplot(filterd, aes(x = Phoebe_Buffay, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
grid.arrange(liner_reg2, liner_reg3,nrow= 1)
grid.arrange(liner_reg1, liner_reg4,liner_reg5,liner_reg6,nrow = 2)
vif_values <- vif(complex_reggrsion)
vif_values_value <- c(1.033673,1.095303,1.153097,1.029526,1.120718,1.017614,1.176870)
vif_values_names <- c("us_views_millions","Ross_Geller","Monica_Geller","Joey_Tribbiani","Rachel_Green","Phoebe_Buffay","Chandler_Bing" )
par(mar=c(5,10,4,1)+.1)
barplot(height=vif_values_value, names=vif_values_names, las =1 , width = 25, legend = TRUE,
names.arg=c("us_views_millions","Ross_Geller","Monica_Geller","Joey_Tribbiani","Rachel_Green","Phoebe_Buffay","Chandler_Bing"), main = "VIF Values", horiz = TRUE, col = "steelblue", xlim = c(0,10))
abline(v = 5, lwd = 3, lty = 10)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
dt_king_of <- friends %>% select(speaker,season,episode) %>%
group_by(speaker,season,episode) %>%
filter(grepl('Chandler Bing|Joey Tribbiani|Ross Geller|Rachel Green|Monica Geller|Phoebe Buffay', speaker)) %>%
group_by(speaker,season,episode) %>%
summarise(per_episode = n())
aa <- dt_king_of %>%
summarise(
season,
episode,
Chandler_Bing = ifelse(speaker == "Chandler Bing", per_episode, 0),
Joey_Tribbiani = ifelse(speaker == "Joey Tribbiani", per_episode, 0),
Rachel_Green = ifelse(speaker == "Rachel Green", per_episode, 0),
Monica_Geller = ifelse(speaker == "Monica Geller", per_episode, 0),
Phoebe_Buffay = ifelse(speaker == "Phoebe Buffay", per_episode, 0),
Ross_Geller = ifelse(speaker == "Ross Geller", per_episode, 0))
aa = subset(aa, select = -c(speaker))
Ross <- aa %>% select(season, episode, Ross_Geller) %>%
filter(Ross_Geller != 0)
Joey <- aa %>% select(season, episode, Joey_Tribbiani) %>%
filter(Joey_Tribbiani != 0)
Rachel <- aa %>% select(season, episode, Rachel_Green) %>%
filter(Rachel_Green != 0)
Monica <- aa %>% select(season, episode, Monica_Geller) %>%
filter(Monica_Geller != 0)
Phoebe <- aa %>% select(season, episode, Phoebe_Buffay) %>%
filter(Phoebe_Buffay != 0)
Chandler <- aa %>% select(season, episode, Chandler_Bing) %>%
filter(Chandler_Bing != 0)
grade <- friends_info %>% select(season, episode, imdb_rating, us_views_millions)
multiFull <- merge(merge(merge(merge(merge(merge(
Ross,
Monica, all = TRUE),
Joey, all = TRUE),
Rachel, all = TRUE),
Chandler, all = TRUE),
Phoebe, all = TRUE),
grade, all = TRUE) %>%
arrange(season, episode)
rank_speakers  <-  merge(dt_king_of,grade,by = c("season","episode"))
rank_speakers <- rank_speakers %>%
filter(!grepl('Sr.', speaker)) %>%
group_by(season, episode) %>%
arrange(season, episode)
agg_score <- rank_speakers %>% group_by(speaker) %>%
summarize(
score = sum(per_episode)
)
ggplot(data = agg_score, aes(speaker,score)) + geom_col(colour = "steelblue", fill="steelblue")
head(multiFull)
complex_reggrsion = lm(formula = imdb_rating ~ Ross_Geller +
Monica_Geller + Joey_Tribbiani +Rachel_Green + Phoebe_Buffay +
Chandler_Bing ,data = multiFull)
summary(complex_reggrsion)
filterd = multiFull %>% filter(dt$us_views_millions<50)
liner_reg1 <-ggplot(filterd, aes(x = Joey_Tribbiani, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg2 <-ggplot(filterd, aes(x = Monica_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg3 <-ggplot(filterd, aes(x = Ross_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg4 <-ggplot(filterd, aes(x = Chandler_Bing, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg5 <-ggplot(filterd, aes(x = Rachel_Green, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg6 <-ggplot(filterd, aes(x = Phoebe_Buffay, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
grid.arrange(liner_reg2, liner_reg3,nrow= 1)
grid.arrange(liner_reg1, liner_reg4,liner_reg5,liner_reg6,nrow = 2)
vif_values <- vif(complex_reggrsion)
vif_values_value <- c(1.033673,1.095303,1.153097,1.029526,1.120718,1.017614,1.176870)
vif_values_names <- c("us_views_millions","Ross_Geller","Monica_Geller","Joey_Tribbiani","Rachel_Green","Phoebe_Buffay","Chandler_Bing" )
par(mar=c(5,10,4,1)+.1)
barplot(height=vif_values_value, names=vif_values_names, las =1 , width = 25, legend = TRUE,
names.arg=c("us_views_millions","Ross_Geller","Monica_Geller","Joey_Tribbiani","Rachel_Green","Phoebe_Buffay","Chandler_Bing"), main = "VIF Values", horiz = TRUE, col = "steelblue", xlim = c(0,10))
abline(v = 5, lwd = 3, lty = 10)
head(multiFull)
complex_reggrsion = lm(formula = imdb_rating ~ Ross_Geller +
Monica_Geller + Joey_Tribbiani +Rachel_Green + Phoebe_Buffay +
Chandler_Bing ,data = multiFull)
summary(complex_reggrsion)
filterd = multiFull %>% filter(dt$us_views_millions<50)
liner_reg1 <-ggplot(filterd, aes(x = Joey_Tribbiani, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg2 <-ggplot(filterd, aes(x = Monica_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg3 <-ggplot(filterd, aes(x = Ross_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg4 <-ggplot(filterd, aes(x = Chandler_Bing, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg5 <-ggplot(filterd, aes(x = Rachel_Green, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg6 <-ggplot(filterd, aes(x = Phoebe_Buffay, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
grid.arrange(liner_reg2, liner_reg3,nrow= 1)
grid.arrange(liner_reg1, liner_reg4,liner_reg5,liner_reg6,nrow = 2)
vif_values <- vif(complex_reggrsion)
vif_values_value <- c(1.033673,1.095303,1.153097,1.029526,1.120718,1.017614,1.176870)
vif_values_names <- c("us_views_millions","Ross_Geller","Monica_Geller","Joey_Tribbiani","Rachel_Green","Phoebe_Buffay","Chandler_Bing" )
par(mar=c(5,10,4,1)+.1)
barplot(height=vif_values_value, names=vif_values_names, las =1 , width = 25, legend = TRUE,
names.arg=c("us_views_millions","Ross_Geller","Monica_Geller","Joey_Tribbiani","Rachel_Green","Phoebe_Buffay","Chandler_Bing"), main = "VIF Values", horiz = TRUE, col = "steelblue", xlim = c(0,10))
abline(v = 5, lwd = 3, lty = 10)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
dt_king_of <- friends %>% select(speaker,season,episode) %>%
group_by(speaker,season,episode) %>%
filter(grepl('Chandler Bing|Joey Tribbiani|Ross Geller|Rachel Green|Monica Geller|Phoebe Buffay', speaker)) %>%
group_by(speaker,season,episode) %>%
summarise(per_episode = n())
aa <- dt_king_of %>%
summarise(
season,
episode,
Chandler_Bing = ifelse(speaker == "Chandler Bing", per_episode, 0),
Joey_Tribbiani = ifelse(speaker == "Joey Tribbiani", per_episode, 0),
Rachel_Green = ifelse(speaker == "Rachel Green", per_episode, 0),
Monica_Geller = ifelse(speaker == "Monica Geller", per_episode, 0),
Phoebe_Buffay = ifelse(speaker == "Phoebe Buffay", per_episode, 0),
Ross_Geller = ifelse(speaker == "Ross Geller", per_episode, 0))
aa = subset(aa, select = -c(speaker))
Ross <- aa %>% select(season, episode, Ross_Geller) %>%
filter(Ross_Geller != 0)
Joey <- aa %>% select(season, episode, Joey_Tribbiani) %>%
filter(Joey_Tribbiani != 0)
Rachel <- aa %>% select(season, episode, Rachel_Green) %>%
filter(Rachel_Green != 0)
Monica <- aa %>% select(season, episode, Monica_Geller) %>%
filter(Monica_Geller != 0)
Phoebe <- aa %>% select(season, episode, Phoebe_Buffay) %>%
filter(Phoebe_Buffay != 0)
Chandler <- aa %>% select(season, episode, Chandler_Bing) %>%
filter(Chandler_Bing != 0)
grade <- friends_info %>% select(season, episode, imdb_rating, us_views_millions)
multiFull <- merge(merge(merge(merge(merge(merge(
Ross,
Monica, all = TRUE),
Joey, all = TRUE),
Rachel, all = TRUE),
Chandler, all = TRUE),
Phoebe, all = TRUE),
grade, all = TRUE) %>%
arrange(season, episode)
rank_speakers  <-  merge(dt_king_of,grade,by = c("season","episode"))
rank_speakers <- rank_speakers %>%
filter(!grepl('Sr.', speaker)) %>%
group_by(season, episode) %>%
arrange(season, episode)
agg_score <- rank_speakers %>% group_by(speaker) %>%
summarize(
score = sum(per_episode)
)
ggplot(data = agg_score, aes(speaker,score)) + geom_col(colour = "steelblue", fill="steelblue")
head(multiFull)
complex_reggrsion = lm(formula = imdb_rating ~ Ross_Geller +
Monica_Geller + Joey_Tribbiani +Rachel_Green + Phoebe_Buffay +
Chandler_Bing ,data = multiFull)
summary(complex_reggrsion)
filterd = multiFull %>% filter(dt$us_views_millions<50)
View(multiFull)
filterd = multiFull %>% filter(multiFull$us_views_millions<50)
liner_reg1 <-ggplot(filterd, aes(x = Joey_Tribbiani, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg2 <-ggplot(filterd, aes(x = Monica_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg3 <-ggplot(filterd, aes(x = Ross_Geller, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg4 <-ggplot(filterd, aes(x = Chandler_Bing, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg5 <-ggplot(filterd, aes(x = Rachel_Green, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
liner_reg6 <-ggplot(filterd, aes(x = Phoebe_Buffay, y = imdb_rating)) +
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue") +
stat_smooth(method = "lm", col = "red", se = FALSE)
<h3>our conclusion: Ross is the character who bring the most rating to every episode!</h3>
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
chi.test(friends_info$imdb_rating)
chi.test(friends_info$imdb_rating)
chisq.test(friends_info$imdb_rating)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
grid <-grid.arrange(liner_reg1, liner_reg4,liner_reg5,liner_reg6,nrow = 2)
grid
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
library(caTools)
library(car)
multiFull = subset(multiFull, select = -c(us_views_millions))
equation1=function(x){coef(complex_reggrsion)[5]*x+coef(complex_reggrsion)[1]}
ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+geom_point()+
stat_function(fun=equation1,geom="line",color=scales::hue_pal()(2)[1])
linger_reg_rachel <- ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue")+
stat_function(fun=equation1,geom="line",color="grey"::hue_pal()(2)[1])
linger_reg_rachel <- ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue")+
stat_function(fun=equation1,geom="line",col="grey"::hue_pal()(2)[1])
linger_reg_rachel <- ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue")+
stat_function(fun=equation1,geom="line",col="grey")
linger_reg_rachel <- ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue")+
stat_function(fun=equation1,geom="line",col="grey")
linger_reg_rachel
liner_reg5 <- ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue")+
stat_function(fun=equation1,geom="line",col="grey", size =2)
liner_reg5 <- ggplot(filterd,aes(y=imdb_rating,x=Rachel_Green))+
geom_point(size = 1, shape = 23, colour ="steelblue", fill = "steelblue")+
stat_function(fun=equation1,geom="line",col="grey", size =1.2)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
emotion_final
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(tidyverse)
library(readr)
library(janitor)
library(gplots)
library(gridExtra)
library(gginference)
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
emotion_sum_MF <- merge(friends,friends_emotions,by = c("season","episode","scene","utterance")) %>%
filter(grepl('Chandler Bing|Joey Tribbiani|Ross Geller|Rachel Green|Monica Geller|Phoebe Buffay', speaker))
emotion_sum_MF = subset(emotion_sum_MF,select = -c(text))
emotion_sum_MF$sex <- ifelse(emotion_sum_MF$speaker %in% c("Chandler Bing","Joey Tribbiani","Ross Geller"),'M','F')
emotion_sum_MF1 <- emotion_sum_MF %>%
group_by(emotion,sex) %>%
summarise(per_episode = n())
emotion_sum_MF2 <-  split(emotion_sum_MF1, emotion_sum_MF1$sex)
emotion_final <- merge(emotion_sum_MF2$M,emotion_sum_MF2$F, by= c("emotion"))
emotion_final <- emotion_final %>% mutate(Male = per_episode.x,
Female = per_episode.y)
emotion_final <- emotion_final %>% select(emotion,Male,Female)
emotion_final
Joy_test <- prop.test(x = 1031, n = 2111, p = 0.5, alternative = "two.sided", conf.level = 0.95)
Joy_test
ggproptest(Joy_test)
Mad_test <- prop.test(x = 573, n = 1101, p = 0.5, alternative = "two.sided", conf.level = 0.95)
Mad_test
ggproptest(Mad_test)
Neutral_test <-prop.test(x = 1343, n = 2852, p = 0.5, alternative = "two.sided", conf.level = 0.95)
Neutral_test
ggproptest(Neutral_test)
Peacful_test <- prop.test(x = 436, n = 918, p = 0.5, alternative = "two.sided")
Peacful_test
ggproptest(Peacful_test)
Powerful_test <- prop.test(x = 357, n = 765, p = 0.5, alternative = "two.sided")
Powerful_test
ggproptest(Powerful_test)
Sad_test <- prop.test(x = 373, n = 669, p = 0.5, alternative = "two.sided")
Sad_test
ggproptest(Sad_test)
Scared_prop <-prop.test(x = 625, n = 1369, p = 0.5, alternative = "two.sided")
Scared_prop
ggproptest(Scared_prop)
x <- emotion_final$Female[1]
x
x <-sum(emotion_final[1])
x <-sum(emotion_final[1])
x <-sum(emotion_final[1,])
x -<emotion_final[Joyful,Male]
x <-emotion_final[Joyful,Male]
emotion_number <-  emotion_final %>% select(Male,Female)
x <-sum(emotion_number[1,])
x
?prop.test
Joy_test <- prop.test(x = emotion_number$Female[1], n = sum(emotion_number[1,]))
Joy_test
conf.level = 0.95
Joy_test <- prop.test(x = emotion_number$Female[1], n = sum(emotion_number[1,]), p = 0.5, alternative = "two.sided",
conf.level = 0.95)
Joy_test
Joy_test <- prop.test(x = emotion_number$Female[1], n = sum(emotion_number[1,]))
Joy_test
Joy_test
, p = 0.5, alternative = "two.sided",
Joy_test <- prop.test(x = emotion_number$Female[1], n = sum(emotion_number[1,]), p = 0.5, alternative = "two.sided",
conf.level = 0.95)
Joy_test
Joy_test <- prop.test(x = emotion_number$Female[1], n = sum(emotion_number[1,]))
Joy_test
Scared_prop <-prop.testx = (emotion_number$Female[7], n = sum(emotion_number[7,]))
Scared_prop <-prop.testx = (x= emotion_number$Female[7], n = sum(emotion_number[7,]))
---
title: "Friends Analysis"
author: "Omer Barhanin's id: 208603662" ','
"Asaf Biniamini's id: 316137017"
output:
html_document:
theme: flatly
highlight: haddock
---
---
<!-- Omer Barhanin's id: 208603662 -->
<!-- Asaf Biniamini's id: 316137017 -->
<img src="logo.png"
width="150"
height="100"
alt="Markdown Monster icon"  style="position:absolute;top:50px;left:870px;" />
<h2>
<span style = "color :light grey;">
Background
</span>
</h2>
<div>
<p>The project will discuss the relations between the collected data from the series "Friends" to the IMDb rating and the character's emotions along the series.<br>
Our two Research Questions our models come to solve are:<br>
1. Who is the character brings the most rating to the series?<br>
2. Have any differences in the proportions of emotional expression between females to males? <p>
